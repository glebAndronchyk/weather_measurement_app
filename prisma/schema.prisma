generator client {
  provider        = "prisma-client"
  output          = "../src/generated/prisma"
  previewFeatures = ["typedSql", "views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
model Measurement {
  id               Int                     @id @default(autoincrement())
  device_id        Int
  timestamp        DateTime                @db.Date
  area             Unsupported("geometry")
  measurement_type MEASUREMENT_TYPE?
  Device           Device                  @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")

  @@index([area], map: "area_index", type: Gist)
}

model TemperatureMeasurement {
  id               Int                     @id @default(autoincrement())
  temp_c           Float
  device_id        Int
  timestamp        DateTime                @db.Date
  area             Unsupported("geometry")
  measurement_type MEASUREMENT_TYPE?       @default(TEMPERATURE_MEASUREMENT)
  Device           Device                  @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")
}

model Vendor {
  id     Int      @id @default(autoincrement())
  name   String
  type   String
  Device Device[]
}

model Device {
  device_type                    DEVICE_TYPE
  features                       String[]
  precision                      Float
  serial_number                  Int                              @default(autoincrement())
  id                             Int                              @id @unique @default(autoincrement())
  vendor_id                      Int?
  date_assembled                 DateTime                         @db.Date
  AirQualityMeasurement          AirQualityMeasurement[]
  AtmosphericPressureMeasurement AtmosphericPressureMeasurement[]
  CloudCovertMeasurement         CloudCovertMeasurement[]
  Vendor                         Vendor?                          @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "vendor_id")
  DeviceHealthLog                DeviceHealthLog[]
  FogLevelMeasurement            FogLevelMeasurement[]
  Measurement                    Measurement[]
  TemperatureMeasurement         TemperatureMeasurement[]
  WindMeasurement                WindMeasurement[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model AirQualityMeasurement {
  id               Int                     @id
  device_id        Int
  timestamp        DateTime                @db.Date
  area             Unsupported("geometry")
  no2              Float?
  so2              Float?
  o3               Float?
  aqi              Float?
  unit             String
  humidity         Float?
  measurement_type MEASUREMENT_TYPE?       @default(AIR_QUALITY_MEASUREMENT)
  Device           Device                  @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")
}

model AtmosphericPressureMeasurement {
  id               Int                     @id
  device_id        Int
  timestamp        DateTime                @db.Date
  area             Unsupported("geometry")
  atm              Float
  unit             String
  measurement_type MEASUREMENT_TYPE?       @default(ATMOSPHERIC_PRESSURE_MEASUREMENT)
  Device           Device                  @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model CloudCovertMeasurement {
  id               Int                     @id
  device_id        Int
  timestamp        DateTime                @db.Date
  area             Unsupported("geometry")
  ccp              Decimal                 @db.Decimal
  measurement_type MEASUREMENT_TYPE?       @default(CLOUD_COVERT_MEASUREMENT)
  Device           Device                  @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")
}

model DeviceHealthLog {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @db.Date
  bucket_path String
  device_id   Int
  Device      Device   @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")
}

model FogLevelMeasurement {
  id               Int                     @id
  device_id        Int
  timestamp        DateTime                @db.Date
  area             Unsupported("geometry")
  density          Float
  measurement_type MEASUREMENT_TYPE?       @default(FOG_LEVEL_MEASUREMENT)
  Device           Device                  @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")
}

model WindMeasurement {
  id               Int                     @id
  device_id        Int
  timestamp        DateTime                @db.Date
  area             Unsupported("geometry")
  speed            Float?
  direction        String?
  measurement_type MEASUREMENT_TYPE?       @default(WIND_MEASUREMENT)
  Device           Device                  @relation(fields: [device_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "device_id")
}

view geojson_measurement {
  measurement_type MEASUREMENT_TYPE?
  id               Int               @unique
  device_id        Int?
  timestamp        DateTime?         @db.Date
  area             String?
}

view geojson_temperaturemeasurement {
  measurement_type MEASUREMENT_TYPE?
  id               Int               @unique
  device_id        Int?
  timestamp        DateTime?         @db.Date
  temp_c           Float?
  area             String?
}

view geojson_foglevelmeasurement {
  measurement_type MEASUREMENT_TYPE?
  id               Int               @unique
  device_id        Int?
  timestamp        DateTime?         @db.Date
  density          Float?
  area             String?
}

view geojson_windmeasurement {
  measurement_type MEASUREMENT_TYPE?
  id               Int               @unique
  device_id        Int?
  timestamp        DateTime?         @db.Date
  speed            Float?
  direction        String?
  area             String?
}

view geojson_airqualitymeasurement {
  measurement_type MEASUREMENT_TYPE?
  id               Int               @unique
  device_id        Int?
  timestamp        DateTime?         @db.Date
  no2              Float?
  so2              Float?
  o3               Float?
  aqi              Float?
  unit             String?
  humidity         Float?
  area             String?
}

view geojson_atmosphericpressuremeasurement {
  measurement_type MEASUREMENT_TYPE?
  id               Int               @unique
  device_id        Int?
  timestamp        DateTime?         @db.Date
  unit             String?
  atm              Float?
  area             String?
}

view geojson_cloudcovertmeasurement {
  measurement_type MEASUREMENT_TYPE?
  id               Int               @unique
  device_id        Int?
  timestamp        DateTime?         @db.Date
  ccp              Decimal?          @db.Decimal
  area             String?
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view geography_columns {
  f_table_catalog    Unsupported("name")?
  f_table_schema     Unsupported("name")?
  f_table_name       Unsupported("name")?
  f_geography_column Unsupported("name")?
  coord_dimension    Int?
  srid               Int?
  type               String?

  @@ignore
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view geometry_columns {
  f_table_catalog   String?              @db.VarChar(256)
  f_table_schema    Unsupported("name")?
  f_table_name      Unsupported("name")?
  f_geometry_column Unsupported("name")?
  coord_dimension   Int?
  srid              Int?
  type              String?              @db.VarChar(30)

  @@ignore
}

enum DEVICE_TYPE {
  AEROSTAT
  STRATOSPHERIC
  GROUND_STATION
  MARINE
  AIRCRAFT_      @map("AIRCRAFT ")
  ORBITAL
}

enum MEASUREMENT_TYPE {
  MEASUREMENT
  TEMPERATURE_MEASUREMENT
  FOG_LEVEL_MEASUREMENT
  WIND_MEASUREMENT
  AIR_QUALITY_MEASUREMENT
  ATMOSPHERIC_PRESSURE_MEASUREMENT
  CLOUD_COVERT_MEASUREMENT
}
